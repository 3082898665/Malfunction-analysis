/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: sinork123 (https://sketchfab.com/sinork123)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/deer-ff5d94e3b3634ec5b7e8689106968bec
title: Deer
*/

import React, { useRef } from "react";
import { useFrame} from '@react-three/fiber'
import { useGLTF } from "@react-three/drei";
export default function Sztest1(props) {
  const { nodes, materials } = useGLTF("/deer.gltf");
  const cunref=useRef()
  useFrame((state,delta) => {
    const time=state.clock.elapsedTime
    cunref.current.rotation.z += 0.005
   
})
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[-93.925, 5.708, 0]}
            rotation={[-Math.PI / 2, 0, -Math.PI / 2]}
          >
            <mesh
            ref={cunref}
              castShadow
              receiveShadow
              geometry={nodes.grp1_2__0.geometry}
              material={materials.RootNode}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/deer.gltf");
